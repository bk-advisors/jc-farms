---
title: <span style="color:white">JC Farms - Financial Analysis</span>
subtitle: "Key Performance Metrics"

author: 
- name: "Matthew Kuch"
  email: kuch.matthew@gmail.com
date: 03/03/2024

title-block-banner: true
title-block-banner-color: "black"

format: html
html:
code-fold: false
code-summary: "Code"
execute: 
  warning: false
  message: false
  echo: false
css: style.css
toc: true
toc-location: left
number-sections: false
editor: visual
fig-cap-location: margin
---

```{r warning=FALSE, message=FALSE}


# -----------------------------------------------------------
# Load libraries
# -----------------------------------------------------------

library(tidyverse)
library(lubridate)
library(highcharter)
library(DT)


```

*"Revenue is vanity, profit is sanity, but cash is king"* â€“ Pehr G. Gyllenhammar

...

## Profit / Loss Statement - Summary Table

```{r}


# -----------------------------------------------------------
# 1. Read CSV data
#    
# -----------------------------------------------------------
df_raw <- read.csv(
  file = "./data/jc_farms_transaction_data_20250310.csv",
  stringsAsFactors = FALSE
)

# -----------------------------------------------------------
# 2. (Optional) Clean or rename columns for easier reference
# -----------------------------------------------------------
# Sometimes R automatically converts special characters (spaces, parentheses).
# If your 'Amount (UGX)' column is not easy to reference, rename it:
df <- df_raw %>%
  rename(
    Amount_UGX = `Amount..UGX.`,
    Batch_Number = `Select.Batch.Number`
  ) %>%
  filter( Select.Account.Type != "Capital Expenditure (CAPEX)") |> 
  filter(Batch_Number != "Batch 3")

# -----------------------------------------------------------
# 3. Summarize amounts by batch and account type
# -----------------------------------------------------------
df_summary <- df |> 
  # Group by the batch and the account type (Revenue, COGS, etc.)
  group_by(Batch_Number, Select.Account.Type) %>%
  # Sum the amounts for each grouping
  summarise(
    Total_Amount = sum(Amount_UGX, na.rm = TRUE),
    .groups = "drop"  # keep summarise from adding grouping structure
  ) %>%
  # Pivot so each account type becomes a column (COGS, OPEX, Revenues, CAPEX)
  pivot_wider(
    names_from  = Select.Account.Type,
    values_from = Total_Amount,
    values_fill = 0  # fill missing combinations with 0
  ) %>%
  # Create a Total Costs and Net Profit column
  mutate(
    Total_Cost = `Cost of Goods Sold (COGS)` + `Operating Expenditure (OPEX)`,
    Net_Profit = Revenues - Total_Cost
  )

# -----------------------------------------------------------
# 4. Make a table of the summarized P&L data
# -----------------------------------------------------------
datatable(df_summary, filter = "top")

# -----------------------------------------------------------
# Optional: Write df and df_summary to CSV 
# -----------------------------------------------------------
# write.csv(df, "./data/JC_Farms_Data.csv", row.names = FALSE)
# write.csv(df_summary, "./data/JC_Farms_PnL_Summary.csv", row.names = FALSE)

```

## Cost per bird & Profit per bird

```{r}

# Example: Summarize total birds, then join back to P&L table

# Number of dead birds
dead_birds <- 3

# Step 1: Identify the transactions that represent "Chicks Purchased"
# (assuming "Chicks Purchased" is indicated in `Select.Category.2`)
df_birds <- df %>%
  filter(Select.Category.2 == "Chicks Purchased") %>%
  group_by(Batch_Number) %>%
  summarise(
    Total_Birds = mean(Quantity - dead_birds, na.rm = TRUE),
    .groups = "drop"
  )

# Step 2: Join total birds to your P&L summary
df_pnl_with_birds <- df_summary %>%
  left_join(df_birds, by = "Batch_Number") %>%
  mutate(
    Cost_per_Bird = (Total_Cost / Total_Birds),
    
    Profit_per_Bird = (Net_Profit / Total_Birds)
    )

# -----------------------------------------------------------
# 4. Make a table of the summarized P&L data
# -----------------------------------------------------------
datatable(df_pnl_with_birds, filter = "top")

```

...

# References/Sources/Citations:

-   JC Farms Transaction Data
