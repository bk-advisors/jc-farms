color = "#D9D9D9",
weight = px(1)
),
locations = cells_body()
) %>%
# Align numeric columns to the right
cols_align(
align = "right",
columns = c(Cycle_1, Cycle_2, Cycle_3, Cycle_4, Cycle_5, Cycle_6)
) %>%
# Add period information
tab_source_note(
source_note = md("**Start period:** 08/10/2024 | 21/12/2024 | 07/01/2025")
) %>%
tab_source_note(
source_note = md("**End of period:** 23/11/2024 | 03/02/2025 | 17/02/2025")
) %>%
# Format main header cells
tab_style(
style = list(
cell_borders(sides = "all", color = "#D9D9D9", weight = px(1)),
cell_fill(color = "#EAEAEA")  # Light gray background for headers
),
locations = cells_column_labels()
) %>%
# Format cycle number headers
tab_style(
style = list(
cell_borders(sides = "all", color = "#D9D9D9", weight = px(1)),
cell_fill(color = "#EAEAEA")
),
locations = cells_column_spanners()
) %>%
# Bold main category rows
tab_style(
style = cell_text(weight = "bold"),
locations = cells_body(
rows = Category %in% c("Revenues", "Cost of Goods Sold (COGS)",
"Operating Expenses", "Other Income", "Other Expenses")
)
) %>%
# Indent subcategory rows
tab_style(
style = cell_text(indent = px(15)),
locations = cells_body(
rows = !Category %in% c("Revenues", "Cost of Goods Sold (COGS)", "Gross Profit",
"Operating Expenses", "Other Income", "Other Expenses", "Net Profit/Loss")
)
) %>%
# Special formatting for Gross Profit and Net Profit rows
tab_style(
style = cell_text(weight = "bold", color = "darkgreen"),
locations = cells_body(
rows = Category == "Gross Profit",
columns = c(Cycle_1, Cycle_2, Cycle_3)
)
) %>%
tab_style(
style = cell_text(weight = "bold", color = "darkgreen"),
locations = cells_body(
rows = Category == "Net Profit/Loss" & pl_data$Cycle_2 == "124,500",
columns = Cycle_2
)
) %>%
tab_style(
style = cell_text(weight = "bold", color = "darkgreen"),
locations = cells_body(
rows = Category == "Net Profit/Loss" & pl_data$Cycle_3 == "347,200",
columns = Cycle_3
)
) %>%
tab_style(
style = cell_text(weight = "bold", color = "darkred"),
locations = cells_body(
rows = Category == "Net Profit/Loss" & pl_data$Cycle_1 == "-483,600",
columns = Cycle_1
)
) %>%
# Hide the row group column and remove row group labels
cols_hide(columns = c(row_group)) %>%
tab_options(
row_group.background.color = "white",
row_group.font.weight = "normal",
table.border.top.style = "hidden",
table.border.bottom.style = "hidden",
column_labels.border.bottom.width = px(2),
column_labels.border.bottom.color = "black",
table_body.hlines.color = "#D9D9D9",
source_notes.font.size = px(10),
source_notes.padding = px(5)
)
# Print the table
jc_poultry_table
# Create the header data
header_data <- tibble(
col1 = "JC Poultry Farm - Profit & Loss / Income Statement",
col2 = "Production Cycle:",
col3 = 1,
col4 = 2,
col5 = 3,
col6 = 4,
col7 = 5,
col8 = 6
)
# Create the period data
period_data <- tibble(
col1 = c("How did we perform in period under review?", "", ""),
col2 = c("Start period:", "End of period:", ""),
col3 = c("08/10/2024", "23/11/2024", ""),
col4 = c("21/12/2024", "03/02/2025", ""),
col5 = c("07/01/2025", "17/02/2025", ""),
col6 = c("", "", ""),
col7 = c("", "", ""),
col8 = c("", "", "")
)
# Create the main table data
table_data <- tibble(
Category = c(
"Revenues", "Sales Revenue (Broilers, Eggs, etc.)", "Other Operating Income (e.g., grants, subsidies)",
"Cost of Goods Sold (COGS)", "Feed Costs", "Veterinary Supplies", "Chicks Purchased", "Other Direct Costs",
"Gross Profit", "Operating Expenses", "Salaries and Wages", "Utilities (Electricity, Water, etc.)",
"Transportation Costs", "Marketing Expenses", "Maintenance and Repairs", "Other Operating Expenses",
"Other Income", "Income from Other Sources", "Other Expenses", "Interest Expenses",
"Depreciation", "Miscellaneous Expenses", "Net Profit/Loss"
),
Description = c(
"Total revenues generated from business operations", "Specify income from broilers, eggs, etc.",
"Include grants, subsidies, or other operating incomes", "Total costs directly tied to production",
"Cost of feed used in production", "Veterinary and medicine costs", "Cost of chicks purchased",
"Include any other direct production costs", "Revenues - COGS", "Total operational costs",
"Salaries paid to workers", "Electricity, water, and related utility costs",
"Transport costs for products or supplies", "Marketing and advertising expenses",
"Repairs and maintenance for assets", "Any other operational expenses", "Any additional incomes",
"Income not directly tied to operations (e.g., interest)", "Any additional expenses",
"Interest payments on loans", "Depreciation of assets", "Other non-operational expenses",
"(Gross Profit–Operating Expenses) + (Other Income–Other Expenses)"
),
`Amount (UGX)_1` = c(
"3,266,000", "3,266,000", "0", "2,532,000", "1,850,000", "72,000", "600,000", "10,000",
"734,000", "1,217,600", "811,000", "42,100", "38,000", "85,000", "0", "241,500",
"0", "0", "0", "0", "0", "0", "483,600"
),
`Amount (UGX)_2` = c(
"3,980,500", "3,980,500", "0", "3,149,000", "2,110,000", "59,000", "930,000", "50,000",
"831,500", "707,000", "490,000", "49,500", "103,500", "-", "0", "64,000",
"0", "0", "0", "0", "0", "0", "124,500"
),
`Amount (UGX)_3` = c(
"2,870,000", "2,870,000", "0", "2,050,000", "1,393,000", "77,000", "580,000", "0",
"820,000", "472,800", "272,500", "20,300", "75,000", "-", "0", "105,000",
"0", "0", "0", "0", "0", "0", "347,200"
)
)
# Function to highlight specific rows
highlight_rows <- function(gt_obj) {
gt_obj %>%
tab_style(
style = cell_fill(color = "#FFDDDD"),
locations = cells_body(rows = Category == "Gross Profit" | Category == "Net Profit/Loss")
)
}
# Create the main table
main_table <- table_data %>%
gt() %>%
tab_header(
title = md("**JC Poultry Farm - Profit & Loss / Income Statement**")
) %>%
cols_label(
Category = "Category",
Description = "Description",
`Amount (UGX)_1` = "Amount (UGX)",
`Amount (UGX)_2` = "Amount (UGX)",
`Amount (UGX)_3` = "Amount (UGX)"
) %>%
tab_spanner(
label = "1",
columns = `Amount (UGX)_1`
) %>%
tab_spanner(
label = "2",
columns = `Amount (UGX)_2`
) %>%
tab_spanner(
label = "3",
columns = `Amount (UGX)_3`
) %>%
# Add production cycle information
tab_footnote(
footnote = "Production Cycle: 1, 2, 3, 4, 5, 6",
) %>%
# Add period information
tab_footnote(
footnote = glue("Start period: 08/10/2024, 21/12/2024, 07/01/2025"),
) %>%
tab_footnote(
footnote = glue("End of period: 23/11/2024, 03/02/2025, 17/02/2025"),
) %>%
# Highlight the gross profit and net profit rows
highlight_rows()
# Print the table
main_table
library(readxl)
library(dplyr)
library(tidyr)
library(gt)
library(gtExtras)
library(scales)
# Read the Excel file
pl_data <- read_excel("./data/JC Poultry Farm  Business Operating Model_v1_250323.xlsx",
sheet = "P + L  Income Statement",
skip = 3)  # Skip the first 3 rows to get to the data
# Read the Excel file
pl_data <- read_excel("../data/JC Poultry Farm - Business Operating Model_v1_250323.xlsx",
sheet = "P + L  Income Statement",
skip = 3)  # Skip the first 3 rows to get to the data
# Read the Excel file
pl_data <- read_excel("./R/data/JC Poultry Farm - Business Operating Model_v1_250323.xlsx",
sheet = "P + L  Income Statement",
skip = 3)  # Skip the first 3 rows to get to the data
# Read the Excel file
pl_data <- read_excel("data/JC Poultry Farm - Business Operating Model_v1_250323.xlsx",
sheet = "P + L  Income Statement",
skip = 3)  # Skip the first 3 rows to get to the data
View(pl_data)
# Clean and transform the data
pl_statement <- pl_data %>%
# Remove any NA rows
filter(!is.na(`Category`)) %>%
# Rename columns for clarity
rename(
category = `Category`,
description = `Description`,
period1_amount = `Amount (UGX)...4`,
period2_amount = `Amount (UGX)...5`,
period3_amount = `Amount (UGX)...6`
) %>%
# Select only the relevant columns
select(category, description, period1_amount, period2_amount, period3_amount)
# Clean and transform the data
pl_statement <- pl_data %>%
# Remove any NA rows
filter(!is.na(`Category`)) %>%
# Rename columns for clarity
rename(
category = `Category`,
description = `Description`,
period1_amount = `Amount (UGX)...3`,
period2_amount = `Amount (UGX)...4`,
period3_amount = `Amount (UGX)...5`
) %>%
# Select only the relevant columns
select(category, description, period1_amount, period2_amount, period3_amount)
View(pl_statement)
# Function to create GT table
create_pl_gt_table <- function(pl_data) {
# Calculate total revenues and COGS
revenues <- pl_data %>%
filter(category == "Revenues") %>%
mutate(
period1_total = sum(period1_amount),
period2_total = sum(period2_amount),
period3_total = sum(period3_amount)
)
cogs <- pl_data %>%
filter(category == "Cost of Goods Sold (COGS)") %>%
mutate(
period1_total = sum(period1_amount),
period2_total = sum(period2_amount),
period3_total = sum(period3_amount)
)
# Prepare data for GT table
gt_data <- bind_rows(
revenues %>%
mutate(row_group = "Revenues") %>%
select(row_group, description, period1_amount, period2_amount, period3_amount),
tibble(
row_group = "Total Revenues",
description = "Total Revenues",
period1_amount = revenues$period1_total,
period2_amount = revenues$period2_total,
period3_amount = revenues$period3_total
),
tibble(row_group = "", description = "", period1_amount = NA, period2_amount = NA, period3_amount = NA),
cogs %>%
mutate(row_group = "Cost of Goods Sold (COGS)") %>%
select(row_group, description, period1_amount, period2_amount, period3_amount),
tibble(
row_group = "Total COGS",
description = "Total Cost of Goods Sold",
period1_amount = cogs$period1_total,
period2_amount = cogs$period2_total,
period3_amount = cogs$period3_total
),
tibble(row_group = "", description = "", period1_amount = NA, period2_amount = NA, period3_amount = NA),
tibble(
row_group = "Gross Profit",
description = "Gross Profit",
period1_amount = revenues$period1_total - cogs$period1_total,
period2_amount = revenues$period2_total - cogs$period2_total,
period3_amount = revenues$period3_total - cogs$period3_total
)
)
# Create GT table
gt_table <- gt_data %>%
gt(groupname_col = "row_group") %>%
fmt_currency(
columns = c(period1_amount, period2_amount, period3_amount),
currency = "UGX"
) %>%
tab_header(
title = "JC Poultry Farm - Profit & Loss Statement",
subtitle = "Financial Performance Across Three Periods"
) %>%
tab_style(
style = cell_text(weight = "bold"),
locations = cells_row_groups()
) %>%
tab_style(
style = cell_text(style = "italic"),
locations = cells_body(columns = description)
) %>%
cols_label(
description = "Description",
period1_amount = "Period 1",
period2_amount = "Period 2",
period3_amount = "Period 3"
) %>%
tab_style(
style = list(
cell_fill(color = "#F0F0F0"),
cell_text(weight = "bold")
),
locations = cells_body(rows = description %in% c("Total Revenues", "Total Cost of Goods Sold", "Gross Profit"))
) %>%
gt_theme_espn() %>%
opt_table_font(
font = "Arial"
) %>%
tab_options(
table.font.size = 12,
heading.title.font.size = 16,
heading.subtitle.font.size = 14
)
return(gt_table)
}
# Create and display the GT table
pl_gt_table <- create_pl_gt_table(pl_statement)
# Save the table as an HTML file (optional)
gtsave(pl_gt_table, filename = "jc_poultry_farm_pl_statement.html")
# Print the table to console or viewer
print(pl_gt_table)
library(tidyverse)
library(lubridate)
library(highcharter)
library(DT)
library(bslib)
library(bsicons)
library(shiny)
# Source functions
source(file="./R-scripts/00-functions.R")
# -----------------------------------------------------------
# 1. Read CSV data
#
# -----------------------------------------------------------
df_raw <- read.csv(
file = "./data/jc_farms_transaction_data_20250325.csv",
stringsAsFactors = FALSE
)
df <- df_raw |>
rename(
Amount_UGX = `Amount..UGX.`,
Batch_Number = `Select.Batch.Number`
) |>
filter( Select.Account.Type != "Capital Expenditure (CAPEX)") |>
filter(Batch_Number != "Batch 3")
library(tidyverse)
library(lubridate)
library(highcharter)
library(DT)
library(bslib)
library(bsicons)
library(shiny)
library(gt)
library(glue)
library(gtExtras)
library(kableExtra)
library(readxl)
library(scales)
# Read the Excel file
pnl_data <- read_excel("data/JC Poultry Farm - Business Operating Model_v1_250323.xlsx",
sheet = "P + L  Income Statement",
skip = 3)  # Skip the first 3 rows to get to the data
View(pnl_data)
# Clean and transform the data
pnl_statement <- pnl_data %>%
# Remove any NA rows
filter(!is.na(`Category`)) %>%
# Rename columns for clarity
rename(
category = `Category`,
description = `Description`,
Batch_1 = `Amount (UGX)...3`,
Batch_2 = `Amount (UGX)...4`,
Batch_3 = `Amount (UGX)...5`
) %>%
# Select only the relevant columns
select(category, period1_amount, period2_amount, period3_amount)
# Clean and transform the data
pnl_statement <- pnl_data %>%
# Remove any NA rows
filter(!is.na(`Category`)) %>%
# Rename columns for clarity
rename(
category = `Category`,
description = `Description`,
Batch_1 = `Amount (UGX)...3`,
Batch_2 = `Amount (UGX)...4`,
Batch_3 = `Amount (UGX)...5`
) %>%
# Select only the relevant columns
select(category, Batch_1, Batch_2, Batch_3)
View(pnl_statement)
# Clean and transform the data
pnl_statement <- pnl_data %>%
# Remove any NA rows
filter(!is.na(`Category`)) %>%
# Rename columns for clarity
rename(
Category = `Category`,
description = `Description`,
Batch_1 = `Amount (UGX)...3`,
Batch_2 = `Amount (UGX)...4`,
Batch_3 = `Amount (UGX)...5`
) %>%
# Select only the relevant columns
select(category, Batch_1, Batch_2, Batch_3)
# Clean and transform the data
pnl_statement <- pnl_data %>%
# Remove any NA rows
filter(!is.na(`Category`)) %>%
# Rename columns for clarity
rename(
Category = `Category`,
description = `Description`,
Batch_1 = `Amount (UGX)...3`,
Batch_2 = `Amount (UGX)...4`,
Batch_3 = `Amount (UGX)...5`
) %>%
# Select only the relevant columns
select(Category, Batch_1, Batch_2, Batch_3)
datatable(pnl_statement, filter = "top")
# -----------------------------------------------------------
# 1. Read CSV data
#
# -----------------------------------------------------------
df_raw <- read.csv(
file = "./data/jc_farms_transaction_data_20250326.csv",
stringsAsFactors = FALSE
)
df <- df_raw |>
rename(
Amount_UGX = `Amount..UGX.`,
Batch_Number = `Select.Batch.Number`
) |>
filter( Select.Account.Type != "Capital Expenditure (CAPEX)") |>
filter(Batch_Number != "Batch 3")
kpis6 <- jc_dashboard_kpis(df,"Batch 6",342)
# Source functions
source(file="./R-scripts/00-functions.R")
kpis6 <- jc_dashboard_kpis(df,"Batch 6",342)
# Read the Excel file
pnl_data <- read_excel("data/JC Poultry Farm - Business Operating Model_v1_250323.xlsx",
sheet = "PnL",
skip = 3)  # Skip the first 3 rows to get to the data
# Read the Excel file
pnl_data <- read_excel("data/JC Poultry Farm - Business Operating Model_v1_250323.xlsx",
sheet = "PnL",
skip = 3)  # Skip the first 3 rows to get to the data
View(pnl_data)
# Clean and transform the data
pnl_statement <- pnl_data %>%
# Remove any NA rows
filter(!is.na(`Category`)) %>%
# Rename columns for clarity
rename(
Category = `Category`,
description = `Description`,
Batch_1 = `Amount (UGX)...3`,
Batch_2 = `Amount (UGX)...4`,
Batch_3 = `Amount (UGX)...5`
) %>%
# Select only the relevant columns
select(Category, Batch_1, Batch_2, Batch_3)
datatable(pnl_statement, filter = "top")
pnl_data <- read_excel("data/JC Poultry Farm - Business Operating Model_v1_250323.xlsx",
sheet = "PnL",
skip = 3)  # Skip the first 3 rows to get to the data
# Clean and transform the data
pnl_statement <- pnl_data %>%
# Remove any NA rows
filter(!is.na(`Category`)) %>%
# Rename columns for clarity
rename(
Category = `Category`,
description = `Description`,
Batch_1 = `Amount (UGX)...3`,
Batch_2 = `Amount (UGX)...4`,
Batch_3 = `Amount (UGX)...5`
) %>%
# Select only the relevant columns
select(Category, Batch_1, Batch_2, Batch_3)
datatable(pnl_statement, filter = "top")
