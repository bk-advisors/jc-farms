print(batch_rev)
# KPI-2 - Total Cost (of Production)
# Filter data for selected batch only
filtered_data <- data |>
filter(Batch_Number == batch_num) |>
# Filter for COGS and OPEX
filter(Select.Account.Type == "Cost of Goods Sold (COGS)" | Select.Account.Type == "Operating Expenditure (OPEX)" )
# Total Cost by Batch Number
cost_by_batch <- filtered_data %>%
group_by(Batch_Number) %>%
summarise(Total_Cost = sum(Amount_UGX, na.rm = TRUE))
batch_cost <- cost_by_batch %>%
select(Total_Cost) %>%
pull()
print(batch_cost)
net_profit <- batch_rev - batch_cost
print(net_profit)
}
jc_dashboard_kpis(df,"Batch 4")
jc_dashboard_kpis <- function(data, batch_num, num_birds) {
# KPI-1 - Total Revenues
# Filter data for selected batch only
filtered_data <- data |>
filter(Batch_Number == batch_num) |>
# Filter for Revenue only
filter(Select.Account.Type == "Revenues")
# Revenues by Batch Number
revenues_by_batch <- filtered_data %>%
group_by(Batch_Number) %>%
summarise(Total_Revenue = sum(Amount_UGX, na.rm = TRUE))
batch_rev <- revenues_by_batch %>%
select(Total_Revenue) %>%
pull()
batch_rev <- format(batch_rev, big.mark = ",", scientific = FALSE)
print(batch_rev)
# KPI-2 - Total Cost (of Production)
# Filter data for selected batch only
filtered_data <- data |>
filter(Batch_Number == batch_num) |>
# Filter for COGS and OPEX
filter(Select.Account.Type == "Cost of Goods Sold (COGS)" | Select.Account.Type == "Operating Expenditure (OPEX)" )
# Total Cost by Batch Number
cost_by_batch <- filtered_data %>%
group_by(Batch_Number) %>%
summarise(Total_Cost = sum(Amount_UGX, na.rm = TRUE))
batch_cost <- cost_by_batch %>%
select(Total_Cost) %>%
pull()
batch_cost <- format(batch_cost, big.mark = ",", scientific = FALSE)
print(batch_cost)
# KPI-3 - Net Profit
net_profit <- batch_rev - batch_cost
net_profit <- format(net_profit, big.mark = ",", scientific = FALSE)
print(net_profit)
# KPI-4
}
jc_dashboard_kpis(df,"Batch 4")
jc_dashboard_kpis <- function(data, batch_num, num_birds) {
# KPI-1 - Total Revenues
# Filter data for selected batch only
filtered_data <- data |>
filter(Batch_Number == batch_num) |>
# Filter for Revenue only
filter(Select.Account.Type == "Revenues")
# Revenues by Batch Number
revenues_by_batch <- filtered_data %>%
group_by(Batch_Number) %>%
summarise(Total_Revenue = sum(Amount_UGX, na.rm = TRUE))
batch_rev <- revenues_by_batch %>%
select(Total_Revenue) %>%
pull()
batch_rev <- format(batch_rev, big.mark = ",", scientific = FALSE)
print(batch_rev)
# KPI-2 - Total Cost (of Production)
# Filter data for selected batch only
filtered_data <- data |>
filter(Batch_Number == batch_num) |>
# Filter for COGS and OPEX
filter(Select.Account.Type == "Cost of Goods Sold (COGS)" | Select.Account.Type == "Operating Expenditure (OPEX)" )
# Total Cost by Batch Number
cost_by_batch <- filtered_data %>%
group_by(Batch_Number) %>%
summarise(Total_Cost = sum(Amount_UGX, na.rm = TRUE))
batch_cost <- cost_by_batch %>%
select(Total_Cost) %>%
pull()
batch_cost <- format(batch_cost, big.mark = ",", scientific = FALSE)
print(batch_cost)
# KPI-3 - Net Profit
net_profit <- as.numeric(batch_rev)  - as.numeric(batch_cost)
net_profit <- format(net_profit, big.mark = ",", scientific = FALSE)
print(net_profit)
# KPI-4
}
jc_dashboard_kpis(df,"Batch 4")
jc_dashboard_kpis <- function(data, batch_num, num_birds) {
# KPI-1 - Total Revenues
# Filter data for selected batch only
filtered_data <- data |>
filter(Batch_Number == batch_num) |>
# Filter for Revenue only
filter(Select.Account.Type == "Revenues")
# Revenues by Batch Number
revenues_by_batch <- filtered_data %>%
group_by(Batch_Number) %>%
summarise(Total_Revenue = sum(Amount_UGX, na.rm = TRUE))
batch_rev <- revenues_by_batch %>%
select(Total_Revenue) %>%
pull()
batch_rev_final <- format(batch_rev, big.mark = ",", scientific = FALSE)
print(batch_rev_final)
# KPI-2 - Total Cost (of Production)
# Filter data for selected batch only
filtered_data <- data |>
filter(Batch_Number == batch_num) |>
# Filter for COGS and OPEX
filter(Select.Account.Type == "Cost of Goods Sold (COGS)" | Select.Account.Type == "Operating Expenditure (OPEX)" )
# Total Cost by Batch Number
cost_by_batch <- filtered_data %>%
group_by(Batch_Number) %>%
summarise(Total_Cost = sum(Amount_UGX, na.rm = TRUE))
batch_cost <- cost_by_batch %>%
select(Total_Cost) %>%
pull()
batch_cost_final <- format(batch_cost, big.mark = ",", scientific = FALSE)
print(batch_cost_final)
# KPI-3 - Net Profit
net_profit <- batch_rev - batch_cost
net_profit_final <- format(net_profit, big.mark = ",", scientific = FALSE)
print(net_profit_final)
# KPI-4
}
jc_dashboard_kpis(df,"Batch 4")
batch_data <- df |>
filter(Batch_Number == "Batch 4")
datatable(batch_data, filter = "top")
batch_data <- df |>
filter(Batch_Number == "Batch 4") |>
select(-c("Record.Start.Time","Record.End.Time"))
datatable(batch_data, filter = "top")
#| title: Key Performance Metrics
# Creating a function that takes in 3 inputs; data, batch_num and num_birds to derive key metrics
jc_dashboard_kpis <- function(data, batch_num, num_birds) {
# KPI-1 - Total Revenues
# Filter data for selected batch only
filtered_data <- data |>
filter(Batch_Number == batch_num) |>
# Filter for Revenue only
filter(Select.Account.Type == "Revenues")
# Revenues by Batch Number
revenues_by_batch <- filtered_data %>%
group_by(Batch_Number) %>%
summarise(Total_Revenue = sum(Amount_UGX, na.rm = TRUE))
batch_rev <- revenues_by_batch %>%
select(Total_Revenue) %>%
pull()
batch_rev_final <- format(batch_rev, big.mark = ",", scientific = FALSE)
print(batch_rev_final)
# KPI-2 - Total Cost (of Production)
# Filter data for selected batch only
filtered_data <- data |>
filter(Batch_Number == batch_num) |>
# Filter for COGS and OPEX
filter(Select.Account.Type == "Cost of Goods Sold (COGS)" | Select.Account.Type == "Operating Expenditure (OPEX)" )
# Total Cost by Batch Number
cost_by_batch <- filtered_data %>%
group_by(Batch_Number) %>%
summarise(Total_Cost = sum(Amount_UGX, na.rm = TRUE))
batch_cost <- cost_by_batch %>%
select(Total_Cost) %>%
pull()
batch_cost_final <- format(batch_cost, big.mark = ",", scientific = FALSE)
print(batch_cost_final)
# KPI-3 - Net Profit
net_profit <- batch_rev - batch_cost
net_profit_final <- format(net_profit, big.mark = ",", scientific = FALSE)
print(net_profit_final)
# KPI-4 Cost Per Bird
total_birds <- num_birds
cost_per_bird <- batch_cost/total_birds
cost_per_bird_final <- format(cost_per_bird, big.mark = ",", scientific = FALSE)
print(cost_per_bird_final)
# KPI-5 Profit per Bird
profit_per_bird <- net_profit/total_birds
profit_per_bird_final <- format(profit_per_bird, big.mark = ",", scientific = FALSE)
print(profit_per_bird_final)
}
jc_dashboard_kpis(df,"Batch 4",197)
#| title: Key Performance Metrics
# Creating a function that takes in 3 inputs; data, batch_num and num_birds to derive key metrics
jc_dashboard_kpis <- function(data, batch_num, num_birds) {
# KPI-1 - Total Revenues
# Filter data for selected batch only
filtered_data <- data |>
filter(Batch_Number == batch_num) |>
# Filter for Revenue only
filter(Select.Account.Type == "Revenues")
# Revenues by Batch Number
revenues_by_batch <- filtered_data %>%
group_by(Batch_Number) %>%
summarise(Total_Revenue = sum(Amount_UGX, na.rm = TRUE))
batch_rev <- revenues_by_batch %>%
select(Total_Revenue) %>%
pull()
batch_rev_final <- format(batch_rev, big.mark = ",", scientific = FALSE)
print(batch_rev_final)
# KPI-2 - Total Cost (of Production)
# Filter data for selected batch only
filtered_data <- data |>
filter(Batch_Number == batch_num) |>
# Filter for COGS and OPEX
filter(Select.Account.Type == "Cost of Goods Sold (COGS)" | Select.Account.Type == "Operating Expenditure (OPEX)" )
# Total Cost by Batch Number
cost_by_batch <- filtered_data %>%
group_by(Batch_Number) %>%
summarise(Total_Cost = sum(Amount_UGX, na.rm = TRUE))
batch_cost <- cost_by_batch %>%
select(Total_Cost) %>%
pull()
batch_cost_final <- format(batch_cost, big.mark = ",", scientific = FALSE)
print(batch_cost_final)
# KPI-3 - Net Profit
net_profit <- batch_rev - batch_cost
net_profit_final <- format(net_profit, big.mark = ",", scientific = FALSE)
print(net_profit_final)
# KPI-4 Cost Per Bird
total_birds <- num_birds
cost_per_bird <- batch_cost/total_birds
cost_per_bird_final <- format(cost_per_bird, big.mark = ",", scientific = FALSE)
print(cost_per_bird_final)
# KPI-5 Profit per Bird
profit_per_bird <- net_profit/total_birds
profit_per_bird_final <- format(profit_per_bird, big.mark = ",", scientific = FALSE)
print(profit_per_bird_final)
}
jc_dashboard_kpis(df,"Batch 4",247)
#| title: Key Performance Metrics
# Creating a function that takes in 3 inputs; data, batch_num and num_birds to derive key metrics
jc_dashboard_kpis <- function(data, batch_num, num_birds) {
# KPI-1 - Total Revenues
# Filter data for selected batch only
filtered_data <- data |>
filter(Batch_Number == batch_num) |>
# Filter for Revenue only
filter(Select.Account.Type == "Revenues")
# Revenues by Batch Number
revenues_by_batch <- filtered_data %>%
group_by(Batch_Number) %>%
summarise(Total_Revenue = sum(Amount_UGX, na.rm = TRUE))
batch_rev <- revenues_by_batch %>%
select(Total_Revenue) %>%
pull()
batch_rev_final <- format(batch_rev, big.mark = ",", scientific = FALSE)
print(batch_rev_final)
# KPI-2 - Total Cost (of Production)
# Filter data for selected batch only
filtered_data <- data |>
filter(Batch_Number == batch_num) |>
# Filter for COGS and OPEX
filter(Select.Account.Type == "Cost of Goods Sold (COGS)" | Select.Account.Type == "Operating Expenditure (OPEX)" )
# Total Cost by Batch Number
cost_by_batch <- filtered_data %>%
group_by(Batch_Number) %>%
summarise(Total_Cost = sum(Amount_UGX, na.rm = TRUE))
batch_cost <- cost_by_batch %>%
select(Total_Cost) %>%
pull()
batch_cost_final <- format(batch_cost, big.mark = ",", scientific = FALSE)
print(batch_cost_final)
# KPI-3 - Net Profit
net_profit <- batch_rev - batch_cost
net_profit_final <- format(net_profit, big.mark = ",", scientific = FALSE)
print(net_profit_final)
# KPI-4 Cost Per Bird
total_birds <- num_birds
cost_per_bird <- round(batch_cost/total_birds,digits = 0)
cost_per_bird_final <- format(cost_per_bird, big.mark = ",", scientific = FALSE)
print(cost_per_bird_final)
# KPI-5 Profit per Bird
profit_per_bird <- round(net_profit/total_birds,digits = 0)
profit_per_bird_final <- format(profit_per_bird, big.mark = ",", scientific = FALSE)
print(profit_per_bird_final)
}
jc_dashboard_kpis(df,"Batch 4",247)
# Source functions
source(file="./R-scripts/00-functions.R")
#| title: Key Performance Metrics
# Calling a function, we created, that takes in 3 inputs; data, batch_num and num_birds to derive key metrics
jc_dashboard_kpis(df,"Batch 4",247)
install.packages("bslib")
install.packages("bslib")
install.packages("bslib")
install.packages("bsicons")
library(bslib)
library(bsicons)
library(shiny)
?value_box
# Source functions
source(file="./R-scripts/00-functions.R")
# Calling a function, we created, that takes in 3 inputs; data, batch_num and num_birds to derive key metrics
#| title: Key Performance Metrics
jc_dashboard_kpis(df,"Batch 4",247)
# -----------------------------------------------------------
# 1. Read CSV data
#
# -----------------------------------------------------------
df_raw <- read.csv(
file = "./data/jc_farms_transaction_data_20250314.csv",
stringsAsFactors = FALSE
)
# -----------------------------------------------------------
# 2. (Optional) Clean or rename columns for easier reference
# -----------------------------------------------------------
# Sometimes R automatically converts special characters (spaces, parentheses).
# If your 'Amount (UGX)' column is not easy to reference, rename it:
df <- df_raw %>%
rename(
Amount_UGX = `Amount..UGX.`,
Batch_Number = `Select.Batch.Number`
) %>%
filter( Select.Account.Type != "Capital Expenditure (CAPEX)") |>
filter(Batch_Number != "Batch 3")
View(df_raw)
df <- df_raw |>
rename(
Amount_UGX = `Amount..UGX.`,
Batch_Number = `Select.Batch.Number`
) |>
filter( Select.Account.Type != "Capital Expenditure (CAPEX)") |>
filter(Batch_Number != "Batch 3")
library(tidyverse)
library(lubridate)
library(highcharter)
library(DT)
library(bslib)
library(bsicons)
library(shiny)
# Source functions
source(file="./R-scripts/00-functions.R")
# -----------------------------------------------------------
# 1. Read CSV data
#
# -----------------------------------------------------------
df_raw <- read.csv(
file = "./data/jc_farms_transaction_data_20250314.csv",
stringsAsFactors = FALSE
)
df <- df_raw |>
rename(
Amount_UGX = `Amount..UGX.`,
Batch_Number = `Select.Batch.Number`
) |>
filter( Select.Account.Type != "Capital Expenditure (CAPEX)") |>
filter(Batch_Number != "Batch 3")
df$Date.of.Transaction <- as.Date(df$Date.of.Transaction, format="%Y-%m-%d")
df$Quantity <- as.numeric(df$Quantity)
df$Amount_UGX <- as.numeric(df$Amount_UGX)
# Calling a function, we created, that takes in 3 inputs; data, batch_num and num_birds to derive key metrics
#| title: Key Performance Metrics
jc_dashboard_kpis(df,"Batch 4",247)
# Source functions
source(file="./R-scripts/00-functions.R")
# Calling a function, we created, that takes in 3 inputs; data, batch_num and num_birds to derive key metrics
#| title: Key Performance Metrics
jc_dashboard_kpis(df,"Batch 4",247)
# Calling a function, we created, that takes in 3 inputs; data, batch_num and num_birds to derive key metrics
#| title: Key Performance Metrics
kpis <- jc_dashboard_kpis(df,"Batch 4",247)
kpis
#| title: Batch Data Table
batch_data <- df |>
select(-c("Record.Start.Time","Record.End.Time"))
?bsicons
library(tidyverse)
library(lubridate)
library(highcharter)
library(DT)
library(bslib)
library(bsicons)
library(shiny)
# Source functions
source(file="./R-scripts/00-functions.R")
# -----------------------------------------------------------
# 1. Read CSV data
#
# -----------------------------------------------------------
df_raw <- read.csv(
file = "./data/jc_farms_transaction_data_20250316.csv",
stringsAsFactors = FALSE
)
df <- df_raw |>
rename(
Amount_UGX = `Amount..UGX.`,
Batch_Number = `Select.Batch.Number`
) |>
filter( Select.Account.Type != "Capital Expenditure (CAPEX)") |>
filter(Batch_Number != "Batch 3")
df$Date.of.Transaction <- as.Date(df$Date.of.Transaction, format="%Y-%m-%d")
df$Quantity <- as.numeric(df$Quantity)
df$Amount_UGX <- as.numeric(df$Amount_UGX)
# Calling a function, we created, that takes in 3 inputs; data, batch_num and num_birds to derive key metrics
#| title: Key Performance Metrics
kpis4 <- jc_dashboard_kpis(df,"Batch 4",246)
value_box(
title = "Revenue",
value = kpis4[1],
showcase = bsicons::bs_icon("bank2"),
theme = "primary"
)
value_box(
title = "Cost of Production",
value = kpis4[2],
showcase = bsicons::bs_icon("twitter"),
theme = "pink"
)
value_box(
title = "Net Profit",
value = kpis4[3],
showcase = bsicons::bs_icon("cash"),
theme = "primary"
)
value_box(
title = "Cost per Bird",
value = kpis4[4],
showcase = bsicons::bs_icon("twitter"),
theme = "pink"
)
value_box(
title = "Profit per Bird",
value = kpis4[5],
showcase = bsicons::bs_icon("cash"),
theme = "primary"
)
value_box(
title = "Profit per Bird",
value = kpis4[5],
showcase = bsicons::bs_icon("cash"),
theme = "primary"
)
kpis5 <- jc_dashboard_kpis(df,"Batch 5",197)
value_box(
title = "Cost of Production",
value = kpis5[1],
showcase = bsicons::bs_icon("twitter"),
theme = "pink"
)
value_box(
title = "Cost per Bird",
value = kpis5[2],
showcase = bsicons::bs_icon("twitter"),
theme = "pink"
)
kpis6 <- jc_dashboard_kpis(df,"Batch 6",347)
value_box(
title = "Cost of Production",
value = kpis6[1],
showcase = bsicons::bs_icon("twitter"),
theme = "pink"
)
value_box(
title = "Cost per Bird",
value = kpis6[2],
showcase = bsicons::bs_icon("twitter"),
theme = "pink"
)
kpis7 <- jc_dashboard_kpis(df,"Batch 7",347)
value_box(
title = "Cost of Production",
value = kpis7[1],
showcase = bsicons::bs_icon("twitter"),
theme = "pink"
)
value_box(
title = "Cost per Bird",
value = kpis7[2],
showcase = bsicons::bs_icon("twitter"),
theme = "pink"
)
library(tidyverse)
library(lubridate)
library(highcharter)
library(DT)
library(bslib)
library(bsicons)
library(shiny)
# Source functions
source(file="./R-scripts/00-functions.R")
# -----------------------------------------------------------
# 1. Read CSV data
#
# -----------------------------------------------------------
df_raw <- read.csv(
file = "./data/jc_farms_transaction_data_v2_20250316.csv",
stringsAsFactors = FALSE
)
df <- df_raw |>
rename(
Amount_UGX = `Amount..UGX.`,
Batch_Number = `Select.Batch.Number`
) |>
filter( Select.Account.Type != "Capital Expenditure (CAPEX)") |>
filter(Batch_Number != "Batch 3")
df$Date.of.Transaction <- as.Date(df$Date.of.Transaction, format="%Y-%m-%d")
df$Quantity <- as.numeric(df$Quantity)
df$Amount_UGX <- as.numeric(df$Amount_UGX)
# Calling a function, we created, that takes in 3 inputs; data, batch_num and num_birds to derive key metrics
#| title: Key Performance Metrics
kpis4 <- jc_dashboard_kpis(df,"Batch 4",246)
kpis5 <- jc_dashboard_kpis(df,"Batch 5",197)
kpis6 <- jc_dashboard_kpis(df,"Batch 6",346)
kpis7 <- jc_dashboard_kpis(df,"Batch 7",347)
kpis5 <- jc_dashboard_kpis(df,"Batch 5",200)
