---
title: "JC Poultry Farm Dashboard"
format: dashboard
editor: visual
---

```{r warning=FALSE, message=FALSE }

# -----------------------------------------------------------
# Load libraries
# -----------------------------------------------------------

library(tidyverse)
library(lubridate)
library(highcharter)
library(DT)
library(bslib)
library(bsicons)
library(shiny)
library(gt)
library(glue)
library(gtExtras)
library(kableExtra)
library(readxl)
library(scales)
library(formattable)

# Source functions
source(file="./R-scripts/00-functions.R")

# -----------------------------------------------------------
# 1. Read CSV data
#    
# -----------------------------------------------------------
df_raw <- read.csv(
  file = "./data/jc_farms_transaction_data_20250327_v2.csv",
  stringsAsFactors = FALSE
)

# -----------------------------------------------------------
# 2. (Optional) Clean or rename columns for easier reference
# -----------------------------------------------------------
# Sometimes R automatically converts special characters (spaces, parentheses).
# If your 'Amount (UGX)' column is not easy to reference, rename it:

df <- df_raw |> 
  rename(
    Amount_UGX = `Amount..UGX.`,
    Batch_Number = `Select.Batch.Number`
  ) |> 
  filter( Select.Account.Type != "Capital Expenditure (CAPEX)") |> 
  filter(Batch_Number != "Batch 3")

# Convert relevant columns to appropriate data types
df$Date.of.Transaction <- as.Date(df$Date.of.Transaction, format="%Y-%m-%d")
df$Quantity <- as.numeric(df$Quantity)
df$Amount_UGX <- as.numeric(df$Amount_UGX)

```

# Batch 4

## Key Performance Metrics

```{r}
# Calling a function, we created, that takes in 3 inputs; data, batch_num and num_birds to derive key metrics
#| title: Key Performance Metrics

kpis4 <- jc_dashboard_kpis(df,"Batch 4",245)

vbs4 <- list(
value_box(
  title = "Revenue",
  value = tags$p(kpis4[1], style = "font-size: 150%;"),
  showcase = bsicons::bs_icon("bank2"),
  theme = "primary"
),

value_box(
  title = "Cost of Production",
  value = tags$p(kpis4[2], style = "font-size: 150%;"),
  showcase = bsicons::bs_icon("twitter"),
  theme = "pink"
),

value_box(
  title = "Net Profit",
  value = tags$p(kpis4[3], style = "font-size: 150%;"),
  showcase = bsicons::bs_icon("cash"),
  theme = "primary"
)
)

layout_column_wrap(
  width = "250px",
  !!!vbs4
)


```

## Per  Bird

```{r}
value_box(
  title = "Cost per Bird",
  value = tags$p(kpis4[4], style = "font-size: 150%;"),
  showcase = bsicons::bs_icon("twitter"),
  theme = "pink"
)

value_box(
  title = "Profit per Bird",
  value = tags$p(kpis4[5], style = "font-size: 150%;"),
  showcase = bsicons::bs_icon("cash"),
  theme = "primary"
)
```

# Batch 5
```{r}
kpis5 <- jc_dashboard_kpis(df,"Batch 5",199)


vbs5 <- list(
value_box(
  title = "Revenue",
  value = tags$p(kpis5[1], style = "font-size: 150%;"),
  showcase = bsicons::bs_icon("bank2"),
  theme = "primary"
),

value_box(
  title = "Cost of Production",
  value = tags$p(kpis5[2], style = "font-size: 150%;"),
  showcase = bsicons::bs_icon("twitter"),
  theme = "pink"
),

value_box(
  title = "Net Profit",
  value = tags$p(kpis5[3], style = "font-size: 150%;"),
  showcase = bsicons::bs_icon("cash"),
  theme = "primary"
)
)

layout_column_wrap(
  width = "250px",
  !!!vbs5
)


```


## Per Bird
```{r}

value_box(
  title = "Cost per Bird",
  value = tags$p(kpis5[4], style = "font-size: 150%;"),
  showcase = bsicons::bs_icon("twitter"),
  theme = "pink"
)

value_box(
  title = "Profit per Bird",
  value = tags$p(kpis5[5], style = "font-size: 150%;"),
  showcase = bsicons::bs_icon("cash"),
  theme = "primary"
)

```


# Batch 6
```{r}
kpis6 <- jc_dashboard_kpis(df,"Batch 6",343)

vbs6 <- list(
value_box(
  title = "Revenue",
  value = tags$p(kpis6[1], style = "font-size: 150%;"),
  showcase = bsicons::bs_icon("bank2"),
  theme = "primary"
),

value_box(
  title = "Cost of Production",
  value = tags$p(kpis6[2], style = "font-size: 150%;"),
  showcase = bsicons::bs_icon("twitter"),
  theme = "pink"
),

value_box(
  title = "Net Profit",
  value = tags$p(kpis6[3], style = "font-size: 150%;"),
  showcase = bsicons::bs_icon("cash"),
  theme = "primary"
)
)

layout_column_wrap(
  width = "250px",
  !!!vbs6
)

```


## Per Bird
```{r}
value_box(
  title = "Cost per Bird",
  value = tags$p(kpis6[4], style = "font-size: 150%;"),
  showcase = bsicons::bs_icon("twitter"),
  theme = "pink"
)

value_box(
  title = "Profit per Bird",
  value = tags$p(kpis6[5], style = "font-size: 150%;"),
  showcase = bsicons::bs_icon("cash"),
  theme = "primary"
)

```


# Batch 7
```{r}
kpis7 <- jc_dashboard_kpis(df,"Batch 7",347)


value_box(
  title = "Cost of Production",
  value = kpis7[1],
  showcase = bsicons::bs_icon("twitter"),
  theme = "pink"
)
```


## Per Bird
```{r}
value_box(
  title = "Cost per Bird",
  value = kpis7[2],
  showcase = bsicons::bs_icon("twitter"),
  theme = "pink"
)

```

# Batch 8
```{r}

kpis8 <- jc_dashboard_kpis(df,"Batch 8",300)


value_box(
  title = "Cost of Production",
  value = kpis8[1],
  showcase = bsicons::bs_icon("twitter"),
  theme = "pink"
)

```



## Per Bird
```{r}

value_box(
  title = "Cost per Bird",
  value = kpis8[2],
  showcase = bsicons::bs_icon("twitter"),
  theme = "pink"
)
```



# Profit / Loss Statement
```{r}
# Read the Excel file

pnl_data <- read_excel("data/JC Poultry Farm - Business Operating Model_v1_250323.xlsx", 
                      sheet = "PnL",
                      skip = 3)  # Skip the first 3 rows to get to the data

# Clean and transform the data
pnl_statement <- pnl_data %>%
  # Remove any NA rows
  filter(!is.na(`Category`)) %>%
  # Rename columns for clarity
  rename(
    Category = `Category`,
    description = `Description`,
    Batch_1 = `Amount (UGX)...3`,
    Batch_2 = `Amount (UGX)...4`,
    Batch_3 = `Amount (UGX)...5`
  ) %>%
  # Select only the relevant columns
  select(Category, Batch_1, Batch_2, Batch_3)

# Get Batch 4 data

# Read CSV data
transactions <- read.csv("data/jc_farms_transaction_data_20250327_v2.csv")

# Filter and aggregate Batch_4 data
batch4 <- transactions %>%
  filter(Select.Batch.Number == "Batch 4") %>%
  mutate(
    Category = case_when(
      Select.Account.Type == "Revenues" ~ Select.Category.3,
      Select.Account.Type == "Cost of Goods Sold (COGS)" ~ Select.Category.2,
      Select.Account.Type == "Operating Expenditure (OPEX)" ~ Select.Category.1,
      TRUE ~ NA_character_
    ),
    Amount = as.numeric(gsub(",", "", Amount..UGX.))
  ) %>%
  filter(!is.na(Category)) %>%
  group_by(Category) %>%
  summarise(Batch_4 = sum(Amount, na.rm = TRUE))

#Sub-setting the 1 cell I want to change
batch4$Category[5] <- "Sales Revenue"

# Create full category structure
categories <- data.frame(
  Category = c(
    "Revenues", "Sales Revenue", "Cost of Goods Sold (COGS)", "Feed Costs",
    "Veterinary Supplies", "Chicks Purchased", "Other Direct Costs",
    "Operating Expenses (OPEX)", "Salaries and Wages", "Utilities (Electricity, Water, etc.)",
    "Transportation Costs", "Marketing Expenses", "Other Operating Expenses",
    "Net Profit/Loss"
  )
)

# Merge with categories and fill missing values

batch4_full <- categories %>%
  left_join(batch4, by = "Category") %>%
  mutate(Batch_4 = coalesce(Batch_4, 0)) %>%
  # Calculate totals
  mutate(Batch_4 = case_when(
    Category == "Revenues" ~ sum(Batch_4[Category == "Sales Revenue"]),
    Category == "Cost of Goods Sold (COGS)" ~ sum(Batch_4[Category %in% c("Feed Costs", "Veterinary Supplies", "Chicks Purchased", "Other Direct Costs")]),
    Category == "Operating Expenses (OPEX)" ~ sum(Batch_4[Category %in% c("Salaries and Wages", "Utilities (Electricity, Water, etc.)", "Transportation Costs", "Marketing Expenses", "Other Operating Expenses")]),
    TRUE ~ Batch_4
  ))

# Calculate Net Profit/Loss

batch4_full <- batch4_full |> 
  mutate(
    Batch_4 = ifelse(
      Category == "Net Profit/Loss",
      Batch_4[Category == "Revenues"] - 
        (Batch_4[Category == "Cost of Goods Sold (COGS)"] + 
           Batch_4[Category == "Operating Expenses (OPEX)"]),
      Batch_4
    )
  )

# Merge with original PnL
final_pnl <- pnl_statement %>%
  left_join(batch4_full, by = "Category")

# Format numbers with commas
final_pnl <- final_pnl %>%
  mutate(across(starts_with("Batch"), ~format(., big.mark = ",", scientific = FALSE)))

final_pnl |> 
  kbl(caption = "JC Farms Profit/Loss Statement") |>
  kable_paper("striped", full_width = F) %>%
  add_indent(c(2, 4, 5,6,7,9,10,11,12,13)) |> 
  row_spec(c(1,3,8,14), bold = T, color = "white", background = "#4287f5") 
  


```


# Data

```{r}

#| title: Batch Data Table 

batch_data <- df |>
  select(-c("Record.Start.Time","Record.End.Time"))

datatable(batch_data, filter = "top")
```
